<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moj.mapper.WangyialbumMapper">
  <resultMap id="BaseResultMap" type="com.moj.entity.Wangyialbum">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="albumid" jdbcType="INTEGER" property="albumid" />
    <result column="albumname" jdbcType="VARCHAR" property="albumname" />
    <result column="publishtime" jdbcType="BIGINT" property="publishtime" />
    <result column="picid" jdbcType="VARCHAR" property="picid" />
    <result column="songid" jdbcType="INTEGER" property="songid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, albumid, albumname, publishtime, picid, songid
  </sql>
  <select id="selectByExample" parameterType="com.moj.entity.WangyialbumExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wangyialbum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wangyialbum
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wangyialbum
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.moj.entity.WangyialbumExample">
    delete from wangyialbum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.moj.entity.Wangyialbum">
    insert into wangyialbum (id, albumid, albumname, 
      publishtime, picid, songid
      )
    values (#{id,jdbcType=INTEGER}, #{albumid,jdbcType=INTEGER}, #{albumname,jdbcType=VARCHAR}, 
      #{publishtime,jdbcType=BIGINT}, #{picid,jdbcType=VARCHAR}, #{songid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.moj.entity.Wangyialbum">
    insert into wangyialbum
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="albumid != null">
        albumid,
      </if>
      <if test="albumname != null">
        albumname,
      </if>
      <if test="publishtime != null">
        publishtime,
      </if>
      <if test="picid != null">
        picid,
      </if>
      <if test="songid != null">
        songid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="albumid != null">
        #{albumid,jdbcType=INTEGER},
      </if>
      <if test="albumname != null">
        #{albumname,jdbcType=VARCHAR},
      </if>
      <if test="publishtime != null">
        #{publishtime,jdbcType=BIGINT},
      </if>
      <if test="picid != null">
        #{picid,jdbcType=VARCHAR},
      </if>
      <if test="songid != null">
        #{songid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.moj.entity.WangyialbumExample" resultType="java.lang.Long">
    select count(*) from wangyialbum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update wangyialbum
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.albumid != null">
        albumid = #{record.albumid,jdbcType=INTEGER},
      </if>
      <if test="record.albumname != null">
        albumname = #{record.albumname,jdbcType=VARCHAR},
      </if>
      <if test="record.publishtime != null">
        publishtime = #{record.publishtime,jdbcType=BIGINT},
      </if>
      <if test="record.picid != null">
        picid = #{record.picid,jdbcType=VARCHAR},
      </if>
      <if test="record.songid != null">
        songid = #{record.songid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update wangyialbum
    set id = #{record.id,jdbcType=INTEGER},
      albumid = #{record.albumid,jdbcType=INTEGER},
      albumname = #{record.albumname,jdbcType=VARCHAR},
      publishtime = #{record.publishtime,jdbcType=BIGINT},
      picid = #{record.picid,jdbcType=VARCHAR},
      songid = #{record.songid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.moj.entity.Wangyialbum">
    update wangyialbum
    <set>
      <if test="albumid != null">
        albumid = #{albumid,jdbcType=INTEGER},
      </if>
      <if test="albumname != null">
        albumname = #{albumname,jdbcType=VARCHAR},
      </if>
      <if test="publishtime != null">
        publishtime = #{publishtime,jdbcType=BIGINT},
      </if>
      <if test="picid != null">
        picid = #{picid,jdbcType=VARCHAR},
      </if>
      <if test="songid != null">
        songid = #{songid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.moj.entity.Wangyialbum">
    update wangyialbum
    set albumid = #{albumid,jdbcType=INTEGER},
      albumname = #{albumname,jdbcType=VARCHAR},
      publishtime = #{publishtime,jdbcType=BIGINT},
      picid = #{picid,jdbcType=VARCHAR},
      songid = #{songid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>